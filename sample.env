# copy the content of this file to a file named ".env". Make sure to include the "." and dont name it only "env".  It should be stored at the root of the repo.
# Make sure to exclude this file from GitHub checkins using a .gitignore file

# The values can be obtained from the API Access page for your Media Services account in the portal.
AZURE_CLIENT_ID="00000000-0000-0000-0000-000000000000"
AZURE_CLIENT_SECRET="00000000-0000-0000-0000-000000000000"
AZURE_TENANT_DOMAIN="microsoft.onmicrosoft.com"
AZURE_TENANT_ID="00000000-0000-0000-0000-000000000000"
AZURE_MEDIA_SERVICES_ACCOUNT_NAME="amsaccount"
AZURE_RESOURCE_GROUP="amsResourceGroup"
AZURE_SUBSCRIPTION_ID="00000000-0000-0000-0000-000000000000"
AZURE_TOKEN_AUDIENCE="https://management.core.windows.net/"
AZURE_ARM_ENDPOINT="https://management.azure.com/"
AZURE_STORAGE_ACCOUNT_NAME = ""

# (OPTIONAL) User Assigned Managed Identity Name
AZURE_USER_ASSIGNED_IDENTITY = ""

# Event Hub settings to listen to Event Grid subscription based samples
EVENTHUB_CONNECTION_STRING= ""
EVENTHUB_NAME= ""
CONSUMER_GROUP_NAME= "$Default"

# You must change this if you are using Gov Cloud, China, or other non standard cloud regions
AADENDPOINT="https://login.microsoftonline.com"

# Settings for the samples

# DRM Testing
DRMSYMMETRICKEY="add random base 64 encoded string here"

# /VideoEncoding/Encoding_Bulk_Remote_Storage_Account_SAS
# (OPTIONAL)
# Remote Storage account SAS - you need to get this in your remote storage account under the Shared Access Keys menu. 
# Generate a Read/List SAS token URL in the portal under the storage accounts "shared access signature" menu
# Grant the allowed resource types : Service, Container, and Object
# Grant the allowed permissions: Read, List
REMOTESTORAGEACCOUNTSAS = "https://<youraccountname>.blob.core.windows.net/?<sas signature>"
# Set the output container SAS (grant write permissions) for this sample
OUTPUTCONTAINERSAS="https://<youraccountname>.blob.core.windows.net/<container>?<sas signature>"